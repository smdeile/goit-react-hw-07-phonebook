{"version":3,"sources":["components/СontactForm/ContactForm.module.css","components/ContactsList/CL.module.css","components/Wrapper/Wrapper.module.css","components/TransitionCss/TransitionRight.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/TransitionCss/TransitionLogo.module.css","components/TransitionCss/Transition.module.css","redux/phonebook/phonebookActions.js","components/Notification/Notification.js","components/СontactForm/СontactForm.js","components/Wrapper/Wrapper.js","components/Filter/Filter.js","components/ContactsList/DeleteContact.js","components/ContactsList/ContactsList.js","components/app.js","redux/phonebook/postOperations.js","redux/phonebook/phopnebookReducer.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","fetchStart","fetchSuccess","fetchFailure","Notification","className","styles","notification_block","СontactForm","state","name","number","contacts","props","notification","handleChange","target","value","setState","handleSubmit","e","preventDefault","find","contact","toLocaleLowerCase","newContact","onSubmit","setTimeout","this","box_shadow","CSSTransition","in","timeout","unmountOnExit","classNames","transitionRight","form","formLabel","input_styles","type","onChange","button","Component","connect","dispatch","Wrapper","children","tittle","wrapper_block","Transition","tittle_PhBook","Filter","filter","DeleteContact","id","key","onClick","ContactsList","onDelete","TransitionGroup","component","list","console","log","includes","map","el","TransitionStyles","item","App","lengthCont","length","app","TransitionRight","mapDispatchToProps","axios","get","then","response","data","catch","err","initialState","addContactToContacts","createReducer","action","payload","nanoid","NewContact","filterContacts","middleware","ReduxThunk","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe4394d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__NMzyp\",\"formLabel\":\"ContactForm_formLabel__3nAk8\",\"button\":\"ContactForm_button__1qDxx\",\"box_shadow\":\"ContactForm_box_shadow__32Vpe\",\"input_styles\":\"ContactForm_input_styles__3J8MZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CL_list__1bS6P\",\"item\":\"CL_item__g2hju\",\"button\":\"CL_button__TPVWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tittle_PhBook\":\"Wrapper_tittle_PhBook__3UbOk\",\"animationName\":\"Wrapper_animationName__2J6Pn\",\"wrapper_block\":\"Wrapper_wrapper_block__UoT6k\",\"app\":\"Wrapper_app__1upu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionRight_enter__3NcNP\",\"enterActive\":\"TransitionRight_enterActive__2XnEF\",\"exit\":\"TransitionRight_exit__3n6GR\",\"exitActive\":\"TransitionRight_exitActive__28N03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2ahxe\",\"box_shadow\":\"Filter_box_shadow__24me8\",\"input_styles\":\"Filter_input_styles__2kGed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification_block\":\"Notification_notification_block__35RB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TransitionLogo_enter__3q3H0\",\"enterActive\":\"TransitionLogo_enterActive__x9Umr\",\"exit\":\"TransitionLogo_exit__3d-yE\",\"exitActive\":\"TransitionLogo_exitActive__3ttls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Transition_enter__1q5ct\",\"enterActive\":\"Transition_enterActive__b_4ZX\",\"exit\":\"Transition_exit__3z9LN\",\"exitActive\":\"Transition_exitActive__WyZl-\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('add/contact');\r\nexport const deleteContact = createAction('delete/contact');\r\nexport const filterContact = createAction('filter/contact');\r\nexport const fetchStart = createAction('notes/FETCH_START');\r\nexport const fetchSuccess = createAction('notes/FETCH_SUCCESS');\r\nexport const fetchFailure = createAction('notes/FETCH_FAILURE');\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n  <div className={styles.notification_block}>\r\n    <p>Contact already exist!</p>\r\n  </div>\r\n);\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebookActions';\r\nimport transitionRight from '../TransitionCss/TransitionRight.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Notification from '../Notification/Notification';\r\n\r\nclass СontactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    contacts: this.props.contacts,\r\n    notification: false,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      this.props.contacts.find(\r\n        contact =>\r\n          contact.name.toLocaleLowerCase() ===\r\n          this.state.name.toLocaleLowerCase(),\r\n      )\r\n    ) {\r\n      this.setState({ notification: true });\r\n      setTimeout(() => this.setState({ notification: false }), 2000);\r\n    } else {\r\n      const newContact = { name: this.state.name, number: this.state.number };\r\n      this.setState({ name: '', number: '' });\r\n      return this.props.onSubmit(newContact);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number, notification } = this.state;\r\n\r\n    return (\r\n      <div className={styles.box_shadow}>\r\n        <CSSTransition\r\n          in={notification}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={transitionRight}\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.formLabel}>\r\n            Name\r\n            <input\r\n              className={styles.input_styles}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.formLabel}>\r\n            Number\r\n            <input\r\n              className={styles.input_styles}\r\n              type=\"number\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// СontactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n//   handleChange: PropTypes.func.isRequired,\r\n//   state: PropTypes.object.isRequired,\r\n// };\r\nconst mapStateToProps = state => ({ contacts: state.contacts });\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactForm);\r\n","import React from 'react';\r\nimport styles from './Wrapper.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Transition from '../TransitionCss/TransitionLogo.module.css';\r\n\r\nconst Wrapper = ({ children, tittle }) => (\r\n  <div className={styles.wrapper_block}>\r\n    <CSSTransition in={true} timeout={500} classNames={Transition}>\r\n      <h1 className={styles.tittle_PhBook}>{tittle}</h1>\r\n    </CSSTransition>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { filterContact } from '../../redux/phonebook/phonebookActions';\r\nclass Filter extends Component {\r\n  state = { filter: '' };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n    return this.props.onChange(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.box_shadow}>\r\n        <label className={styles.form}>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.input_styles}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={this.state.filter}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   handleChange: PropTypes.func.isRequired,\r\n//   state: PropTypes.object.isRequired,\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: filter => dispatch(filterContact(filter)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './CL.module.css';\r\n\r\nconst DeleteContact = ({ deleteContact, id }) => (\r\n  <button key={id} onClick={deleteContact} className={styles.button}>\r\n    &#x2716;\r\n  </button>\r\n);\r\n// DeleteContact.propTypes = {\r\n//   deleteContact: PropTypes.func.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n// };\r\nexport default DeleteContact;\r\n","import React, { Component } from 'react';\r\nimport DeleteContact from './DeleteContact';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './CL.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport TransitionStyles from '../TransitionCss/Transition.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  deleteContact,\r\n  fetchStart,\r\n} from '../../redux/phonebook/phonebookActions';\r\n\r\nclass ContactsList extends Component {\r\n  deleteContact = id => this.props.onDelete(id);\r\n\r\n  render() {\r\n    const { filter, contacts } = this.props;\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.list}>\r\n        {\r\n          (console.log(contacts),\r\n          contacts\r\n            .filter(name => {\r\n              return name.name.toLocaleLowerCase().includes(filter);\r\n            })\r\n            .map(el => (\r\n              <CSSTransition\r\n                key={el.id}\r\n                timeout={250}\r\n                unmountOnExit\r\n                classNames={TransitionStyles}\r\n              >\r\n                <li className={styles.item}>\r\n                  <p className={styles.name}>{el.name}</p>\r\n                  <p className={styles.number}>{el.number}</p>\r\n                  <DeleteContact\r\n                    deleteContact={() => this.deleteContact(el.id)}\r\n                    id={el.id}\r\n                  />\r\n                </li>\r\n              </CSSTransition>\r\n            )))\r\n        }\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactsList.propTypes = {\r\n//   deleteContact: PropTypes.func.isRequired,\r\n//   state: PropTypes.object.isRequired,\r\n// };\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React, { Component } from 'react';\r\nimport СontactForm from './СontactForm/СontactForm';\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport Filter from './Filter/Filter';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport TransitionRight from './TransitionCss/TransitionRight.module.css';\r\nimport styles from './Wrapper/Wrapper.module.css';\r\nimport * as postOperations from '../redux/phonebook/postOperations';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.props.fetchStart();\r\n  }\r\n  render() {\r\n    // axios.get('http://localhost:3000/contacts').then(console.log);\r\n\r\n    const { contacts } = this.props;\r\n    const lengthCont = contacts.length > 1;\r\n    return (\r\n      <div className={styles.app}>\r\n        <Wrapper tittle=\"Phonebook\"></Wrapper>\r\n        <СontactForm />\r\n\r\n        <CSSTransition\r\n          in={lengthCont}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={TransitionRight}\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        {<ContactsList state={this.state} deleteContact={this.deleteContact} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchStart: postOperations.asyncActionCreator,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { fetchStart, fetchSuccess, fetchFailure } from './phonebookActions';\r\nimport axios from 'axios';\r\n\r\nexport const asyncActionCreator = () => dispatch => {\r\n  dispatch(fetchStart());\r\n  console.log('.asyncActionCreator');\r\n  axios\r\n    .get('http://localhost:3000/contacts')\r\n    .then(response => dispatch(fetchSuccess(response.data)))\r\n    .catch(err => dispatch(fetchFailure(err)));\r\n};\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  filterContact,\r\n  fetchSuccess,\r\n} from './phonebookActions';\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    { id: 'id-5', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  filter: '',\r\n};\r\nexport const addContactToContacts = createReducer(initialState.contacts, {\r\n  // [asyncFetch]: (state, action) => {\r\n  //   return [...action.payload];\r\n  // },\r\n  [fetchSuccess]: (state, action) => {\r\n    const NewContact = {\r\n      name: action.payload,\r\n      number: action.payload.number,\r\n      id: nanoid(),\r\n    };\r\n    console.log(action.payload);\r\n    return [...state, ...action.payload];\r\n  },\r\n  [addContact]: (state, action) => {\r\n    const NewContact = {\r\n      name: action.payload.name,\r\n      number: action.payload.number,\r\n      id: nanoid(),\r\n    };\r\n    console.log(action.payload);\r\n    return [...state, NewContact];\r\n  },\r\n  [deleteContact]: (state, action) => {\r\n    const deleteContact = state.filter(\r\n      contact => contact.id !== action.payload,\r\n    );\r\n    return deleteContact;\r\n  },\r\n});\r\nexport const filterContacts = createReducer(initialState.filter, {\r\n  [filterContact]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport './base.css';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  addContactToContacts,\r\n  filterContacts,\r\n} from './redux/phonebook/phopnebookReducer';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst middleware = [ReduxThunk];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: addContactToContacts,\r\n  filter: filterContacts,\r\n  // fetchStart: asyncActionCreator,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}